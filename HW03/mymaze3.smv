MODULE main
  VAR
    m : boolean;
    c : boolean;
    k1 : boolean;
    d1 : boolean;
    a : boolean;
    p : boolean;
    t : boolean;
  ASSIGN
    init(m) := TRUE;
    init(c) := FALSE;
    init(k1) := FALSE;
    init(d1) := FALSE;
    init(a) := FALSE;
    init(p) := FALSE;
    init(t) := FALSE;

    next(m) := m;
    next(a) := a;
    next(p) := p;
    next(t) := t;
    next(k1) :=
      case
        m: TRUE;
        TRUE : k1;
      esac;
    next(d1) :=
      case
        m & k1 & k1: TRUE;
        TRUE : d1;
      esac;
    next(c) :=
      case
        m & k1 & d1: TRUE;
        TRUE : c;
      esac;

SPEC       AG (!k1 & !d1 & !p & !c & !a & !t) --1 for mazes with more doors/keys they would have been considered here too which probably isn't too good
SPEC       AG (p -> (AF a)) --2
SPEC       AG (p -> EF a) --3
SPEC       EF (p & EF a) --4
SPEC       AG (d1 -> !k1) --5
SPEC       AG (d1 -> (EG(!t & !p) & EF(c))) --6 for mazes with more doors they would have been considered here too
SPEC       AG (d1 -> k1) --7
--SPEC      --8
SPEC       EF (d1) -- 9
SPEC       EF (c) --10
